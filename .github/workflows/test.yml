name: Test Suite

on:
  push:
    branches: [ main, develop, development ]
  pull_request:
    branches: [ main, develop, development ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env.ci file
        run: cp .env.ci.example .env.ci

      - name: Build and run tests
        run: |
          docker compose -f docker-compose.ci.yml up \
            --build \
            --abort-on-container-exit \
            --exit-code-from app
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Copy coverage reports from container
        if: always()
        run: |
          docker cp dashtam-ci-app:/app/coverage.xml ./coverage.xml || true
          docker cp dashtam-ci-app:/app/test-results.xml ./test-results.xml || true

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            test-results.xml
            coverage.xml

      - name: Cleanup
        if: always()
        run: docker compose -f docker-compose.ci.yml down -v

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r requirements-dev.txt

      - name: Run ruff linter
        run: |
          source .venv/bin/activate
          ruff check src/ tests/

      - name: Check code formatting
        run: |
          source .venv/bin/activate
          ruff format --check src/ tests/
